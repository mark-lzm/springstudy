<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.litchi.spring.ioc.dao.UserMapper">
    <select id="selectAllUser" resultType="net.litchi.spring.ioc.pojo.User">
        select *
        from user
    </select>

    <!--
        #{} 会自动判断传入的参数的类型  如果是String 会自动加上单引号
        ${} 不变，直接输出
      -->
    <!--
           select *
            from user u
            where u.username like '%'mt'%'
    -->

    <select id="selectUserLikeName" parameterType="string" resultType="net.litchi.spring.ioc.pojo.User">
        select *
        from user u
        where u.username like '%${value}%'
    </select>

    <select id="selectUserByHashMap" parameterType="hashmap" resultType="net.litchi.spring.ioc.pojo.User">
        select *
        from user u
        where u.username like '%${username}%'
          and u.password = #{password}
    </select>

    <select id="selectUserByUserQueryVo" parameterType="hashmap" resultType="net.litchi.spring.ioc.pojo.vo.UserQueryVo">
        select *
        from user u
        where u.username like '%${username}%'
          and u.password = #{password}
    </select>

    <select id="selectUserById" resultType="net.litchi.spring.ioc.pojo.User" parameterType="String">
        select *
        from user
        where id = #{value}
    </select>


    <!--安全与性能-->
    <!--开发成本和运维成本-->

    <insert id="insertUserUuid" parameterType="net.litchi.spring.ioc.pojo.User">
        <selectKey order="BEFORE" keyProperty="id" resultType="String">
            select UUID()
        </selectKey>
        insert into user(id, username, birthday, sex, address, password, mobile)
        values (#{id}, #{username}, #{birthday}, #{sex}, #{address}, #{password}, #{mobile})
    </insert>

    <update id="updateUserByUserId" parameterType="net.litchi.spring.ioc.pojo.User">
        UPDATE user
        SET username=#{username},
            sex=#{sex},
            password=#{password}
        WHERE id = #{id}
    </update>

    <delete id="deleteUserByUserId" parameterType="net.litchi.spring.ioc.pojo.User">
        delete
        from user
        where id = #{id}
    </delete>


    <!--    增删改，固定返回值都是int类型，表示sql语句影响了多少条记录-->
    <insert id="insertUser" parameterType="net.litchi.spring.ioc.pojo.User">
        insert into user(id, username, birthday, sex, address, password, mobile)
        values (#{id}, #{username}, #{birthday}, #{sex}, #{address}, #{password}, #{mobile})
    </insert>


    <update id="updateUser">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
        </set>
        where id =#{id}
    </update>


    <sql id="andAllFileds">
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
        <if test="username != null and username != ''">
            and username = #{username}
        </if>
        <if test="birthday != null">
            and birthday = #{birthday}
        </if>
        <if test="sex != null and sex != ''">
            and sex = #{sex}
        </if>
        <if test="address != null and address != ''">
            and address = #{address}
        </if>
        <if test="password != null and password != ''">
            and password = #{password}
        </if>
        <if test="mobile != null and mobile != ''">
            and mobile = #{mobile}
        </if>
    </sql>

    <delete id="deleteUser" parameterType="net.litchi.spring.ioc.pojo.User">
        delete from user u
        <where>
            <include refid="andAllFileds"/>
        </where>
    </delete>


    <select id="selectUserByQueryVo" parameterType="net.litchi.spring.ioc.pojo.vo.UserQueryVo"
            resultType="net.litchi.spring.ioc.pojo.User">
        select * from user u
        <where>
            <include refid="andAllFileds"/>
        </where>
        <if test="ids != null and ids.size()!=0">
            <foreach item="id" collection="ids" open="and id in (" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>


</mapper>